# This is a basic workflow to help you get started with Actions

name: integration-test

on:
  push:
    branches: [ integration-test ]

env:
  DROPLET_SHUTDOWN_TIMEOUT: 120
  DROPLET_NAME: ynh26-pkgchk-${{ github.run_id }}

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      # Configures ssh
      # to disable Warning: Identity file...not accessible
      # to disable authenticity of host input y/n
      - name: Setup SSH
        run: |
          ssh-keygen -b 2048 -t rsa -f ~/.ssh/id_rsa -q -N ""
          echo "Host *" | tee -a ~/.ssh/config
          echo "   StrictHostKeyChecking=no" | tee -a ~/.ssh/config
          echo "   UserKnownHostsFile=/dev/null" | tee -a ~/.ssh/config

      - name: Setup droplet
        run: |
          doctl compute ssh-key create ${{ env.DROPLET_NAME }} --no-header --public-key "$(cat ~/.ssh/id_rsa.pub)"
          sleep 2
          doctl compute droplet create ${{ env.DROPLET_NAME }} --wait --region fra1 --image debian-9-x64 --size 4gb --ssh-keys $(doctl compute ssh-key list --no-header | grep ${{ env.DROPLET_NAME }} | awk -F ' ' '{print $3}'),$(doctl compute ssh-key list --no-header | grep selamanse | awk -F ' ' '{print $3}')
          sleep 15
          doctl compute ssh ${{ env.DROPLET_NAME }} --ssh-command "shutdown -h ${DROPLET_SHUTDOWN_TIMEOUT}"

      - name: Run package check
        env:
          SSH_CMD: doctl compute ssh ${{ env.DROPLET_NAME }} --ssh-command
        run: |
          $SSH_CMD "apt-get update -y"
          $SSH_CMD "apt-get install git -y"
          $SSH_CMD "rm -rf package_check"
          $SSH_CMD "rm -rf package"
          $SSH_CMD "git clone https://github.com/YunoHost/package_check"
            - cat test/pkgchk-config | $dropletsshcmd "cat > package_check/config"
          $SSH_CMD "git clone https://github.com/${GITHUB_REPOSITORY} package"
          $SSH_CMD "cd package && git checkout ${GITHUB_SHA} && cd .."
          $SSH_CMD "./package_check/package_check.sh --build-lxc --bash-mode package"
          $SSH_CMD "cat ./package_check/Complete.log"

      - name: Cleanup
        run: |
          doctl compute droplet delete ${{ env.DROPLET_NAME }} -f
          doctl compute ssh-key delete $(doctl compute ssh-key list | grep ${{ env.DROPLET_NAME }} | awk -F ' ' '{print $1}') -f
